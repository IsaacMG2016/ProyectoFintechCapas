<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAmnYFAJx6CACbehMAmXscAKF7AACZeyEAnX8oAKiAAACrhgIArYUAAKqGBQCthwYAsYkBALaO
        BQC3kAYAq4cYALCMHQC4kh4AnYEuAJ2DNQCqhyEAu5UgALOSKAC0kykAtJQqALWVLAC4lCsAuZgtAKSH
        NQCnijkAspI1ALWTNwC4lTQAvpkxALGSPAC0lz0AuJo6ALuaPgDAmzMAwp08AMSjPwCljUEAqY5EAKiQ
        SgC4mUYAuJtJAKqUUwCslFEAq5ZVAKyWVwCtmV8AsZhTALqeUgC/okIAu6BTAL2gUgC9oFQAvKNbAL+k
        WQCum2MAuqRlAL+pZgC0omwAvaZoALWkcgC4p3IAuahzAMWhQADEokcAyadOAMOkVgDDp1oAx6ldAMqs
        WADNrFsAyKpdAM6uXgDBq2MAw6tmAMKsZQDFrWYAyKpgAMStaQDGsWsAyLNvAMq2bwDTtGwA0rtuANK8
        bwDErXAAxrJ0AMm0cgDOuHYAy7V6AM65eQDOvH0A07dyANG1dADSuHcA0Lp4ANS5eADVu30A0L1+ANi8
        ewDYwHMA1sJ+ANjBfgC+roAAtKydALmvmgC/tZ4Atq+hALCsqwC/urEAwq+FAMeygQDKt4UAy7iBAMm5
        hgDAs4gAybqIAM24igDMvYsAyLmMAMu8jADMvo4A0b6AANe9gQDXvoUA2L+FANe/igDCtJcAxbqUAMi6
        kQDJvJMAyb2VAMW3mQDKvpoAzL+YAMG6qwDSwIMA1MGDANLBhADVwoUA1cKKANvCiADaw40AzcCSAM/B
        lQDNwZoAzcKdANDAkQDQwpYA0cSXANrEkQDaxJUA0sSaANXFmADUx5wA3MebANXIngDeyZkA3cmdAODJ
        lgDgy5sA0saiANbHowDWyqAA08imANnKogDZzKUA38ylANTLrQDazagA3dGsANLLtADVz7kA3dO3ANfR
        vADc07kA2dO/AODNoADgzaYA49CkAOLSrwDk060A5NSuAOjVrQDi0rAA4NSxAObWsgDi1rUA5ta0AOXY
        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
        AD/gAAB/////////////////
</value>
  </data>
</root>